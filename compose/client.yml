services:
  frontend:
    build:
      context: ./frontend
      args:
        - NODE_ENV=${NODE_ENV}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_INTERNAL_PORT}"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:${BACKEND_PORT}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${FRONTEND_INTERNAL_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: ./backend
      args:
        - NODE_ENV=${NODE_ENV}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - database
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${BACKEND_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - STUN_SERVERS=${STUN_SERVERS}
      - TURN_SERVER_URL=${TURN_SERVER_URL}
      - TURN_SERVER_USERNAME=${TURN_SERVER_USERNAME}
      - TURN_SERVER_CREDENTIAL=${TURN_SERVER_CREDENTIAL}
      - DEFAULT_DHT_SERVICES=${DEFAULT_DHT_SERVICES}
    env_file:
      - .env
    command: >
      sh -c "npm start & sleep 10 && node src/scripts/init-dht.js && node src/scripts/init-ice.js && node src/scripts/init-tracker.js && wait"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${BACKEND_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  database:
    build:
      context: ./database
    volumes:
      - mongo-data:/data/db
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  mongo-data:
